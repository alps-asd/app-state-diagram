name: "Static Analysis"

on:
  ["pull_request", "push", "workflow_dispatch"]

jobs:
  static-analysis-phpstan:
    name: "Static Analysis with PHPStan"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "8.0"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP ${{ matrix.php-version }}"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpstan, cs2pr
          coverage: none

      - name: "Get composer cache directory"
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@v2
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "Install dependencies with Composer"
        run: "composer install --no-interaction --no-progress --prefer-dist"

      - name : "Run PHPStan"
        run: "phpstan analyse -c phpstan.neon --no-progress --no-interaction --error-format=checkstyle | cs2pr"

  static-analysis-psalm:
    name: "Static Analysis with Psalm"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "8.0"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP ${{ matrix.php-version }}"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: psalm:4.3.1, cs2pr
          coverage: none

      - name: "Get composer cache directory"
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@v2
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "Install dependencies with Composer"
        run: "composer install --no-interaction --no-progress --prefer-dist"

      - name : "Run Psalm"
        run: "psalm --output-format=checkstyle | cs2pr"

  static-analysis-composer-require-checker:
    name: "Static Analysis with ComposerRequireChecker"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "8.0"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP ${{ matrix.php-version }}"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpstan, cs2pr
          coverage: none

      - name: "Get composer cache directory"
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@v2
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "Install dependencies with Composer"
        run: |
          composer install --no-interaction --no-progress --prefer-dist
          composer global require --dev maglnet/composer-require-checker ^3.0

      - name : "Run composer-require-checker"
        run: "composer global exec -v -- composer-require-checker check ./composer.json"
