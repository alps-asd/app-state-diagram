#!/usr/bin/env php
<?php

declare(strict_types=1);

use Koriym\AppStateDiagram\ConfigFactory;
use Koriym\AppStateDiagram\DrawDiagram;
use Koriym\AppStateDiagram\DumpDocs;
use Koriym\AppStateDiagram\Exception\AlpsFileNotReadableException;
use Koriym\AppStateDiagram\IndexPage;
use Koriym\AppStateDiagram\LabelNameFactory;
use Koriym\AppStateDiagram\Profile;
use Koriym\AppStateDiagram\PutDiagram;
use Koriym\AppStateDiagram\TaggedProfile;
use Koriym\DataFile\Exception\DataFileNotFoundException;

foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;

        break;
    }
}
if ($argc === 1) {
    echo <<<EOT
usage: asd [options] alps_file
@see https://github.com/alps-asd/app-state-diagram#usage

EOT;
    exit(0);
}
$options = getopt('c:w::l::m::', ['config:', 'watch::', 'color::', 'and-tag::', 'or-tag::', 'label::', 'mode::']);
if ($argc === 1) {
    $options['c'] = getcwd();
}
try {
    $configOption = $options['c'] ?? $options['config'] ?? null;
    $config = $configOption !== null ? ConfigFactory::fromFile($configOption, $argc, $argv, $options) : ConfigFactory::fromCommandLine($argc, $argv, $options);
} catch (DataFileNotFoundException $e) {
    printf('Config file not found: %s', $e->getMessage());
    exit(1);
} catch (AlpsFileNotReadableException $e) {
    printf('Profile file not found: %s', $e->getMessage());
    exit(1);
}
if ($config->watch) {
    chdir(dirname(__DIR__) . '/asd-sync');
    $isFirstRun = ! is_dir(dirname(__DIR__) . '/asd-sync/node_modules');
    if ($isFirstRun) {
        passthru('npm install');
    }

    passthru("npm start -- --profile {$config->profile} --port {$config->port}");
    exit(0);
}

try {
    (new PutDiagram())($config);
} catch (Exception $e) {
    $shortName = (new \ReflectionClass($e))->getShortName();
    $msg = sprintf("asd: %s(%s)",$shortName, $e->getMessage());
    file_put_contents('php://stderr', $msg . PHP_EOL);
    exit(1);
}
